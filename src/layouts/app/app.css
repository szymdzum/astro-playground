
  :root {
    --font-size-base: clamp(1rem, 0.34vw + 0.91rem, 1.19rem);
    --font-size-lg: clamp(1.2rem, 0.7vw + 1.2rem, 1.5rem);
    --font-size-xl: clamp(2.44rem, 2.38vw + 1.85rem, 3.75rem);

    --color-text: hsl(12, 5%, 4%);
    --color-bg: hsl(10, 21%, 95%);
    --color-border: hsl(17, 24%, 90%);
   
    --astro-gradient: linear-gradient(0deg, #4f39fa, #da62c4);
    --border-thin: 1px solid var(--color-border);
  }
  :global(h1) {
    font-size: var(--font-size-xl);
  }
  :global(h2) { 
    font-size: var(--font-size-lg);
  }
  :global(code) {
    font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
      Bitstream Vera Sans Mono, Courier New, monospace;
  }
  
  * {
    box-sizing: border-box;
  }
  html {
    font-family: system-ui, sans-serif;
    font-size: var(--font-size-base);
    color: var(--color-text);
    background-color: var(--color-bg);
  }
  body {
    margin: 0;
    padding-top: 3rem;
  }
  a {
    color: inherit;
    text-decoration: none;
  }
  ul {
    list-style: none;
  }

  /* Layout */

  .stack {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
  }

  .stack-small > * + * {
    margin-top: var(--space, 0.5rem);
  }

  .stack > * + * {
    margin-top: var(--space, 1.5rem);
  }

  .stack-large > * + * {
    margin-top: var(--space, 3rem);
  }

  .stack:only-child {
    height: 100%;
  }

  /*
  .stack > :nth-child(2) {
    margin-bottom: auto;
  } 
  */


/* The Sidebar
   is applicable to all sorts of content.
   The ubiquitous “media object” (the placing of an item of media next to a description) is a mainstay,
   but it can also be used to align buttons with form inputs
*/

  .with-sidebar {
    display: flex;
    flex-wrap: wrap;
    /* ↓ The default value is the first point on the modular scale */
    gap: var(--gutter, var(--s1));
  }
  .with-sidebar > :first-child {
    /* ↓ The width when the sidebar _is_ a sidebar */
    flex-basis: 20rem;
    flex-grow: 1;
  }
  .with-sidebar > :last-child {
    /* ↓ Grow from nothing */
    flex-basis: 0;
    flex-grow: 999;
    /* ↓ Wrap when the elements are of equal width */
    min-width: 50%;
  }

/* The Switcher
  switch directly between a horizontal and vertical layout.
*/

  .switcher {
    display: flex;
    flex-wrap: wrap;
    /* ↓ The default value is the first point on the modular scale */
    gap: var(--gutter, var(--s1));
    /* ↓ The width at which the layout “breaks” */
    --threshold: 40rem;
  }
  .switcher > * {
    /* ↓ Allow children to grow */
    flex-grow: 1;
    /* ↓ Switch the layout at the --threshold */
    flex-basis: calc((var(--threshold) - 100%) * 999);
  }
  .switcher > :nth-last-child(n+5),
  .switcher > :nth-last-child(n+5) ~ * {
    /* ↓ Switch to a vertical configuration if
    there are more than 4 child elements */
    flex-basis: 100%;
  }


  /* Design Helpers */
  * {
    border: 1px dotted hsla(120, 5%, 4%, 0.137);
  }
