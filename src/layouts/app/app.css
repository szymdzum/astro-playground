
  :root {
    --font-size-base: clamp(1rem, 0.34vw + 0.91rem, 1.19rem);
    --font-size-lg: clamp(1.2rem, 0.7vw + 1.2rem, 1.5rem);
    --font-size-xl: clamp(2.44rem, 2.38vw + 1.85rem, 3.75rem);

    --color-text: hsl(12, 5%, 4%);
    --color-bg: hsl(10, 21%, 95%);
    --color-border: hsl(17, 24%, 90%);
   
    --astro-gradient: linear-gradient(0deg, #4f39fa, #da62c4);
    --border-thin: 1px solid var(--color-border);
    /* Helpers */
    --test-border:  hsla(120, 5%, 4%, 0.137);
  }
  :global(h1) {
    font-size: var(--font-size-xl);
  }
  :global(h2) { 
    font-size: var(--font-size-lg);
  }
  :global(code) {
    font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
      Bitstream Vera Sans Mono, Courier New, monospace;
  }
  
  * {
    box-sizing: border-box;
  }

  html {
    font-family: system-ui, sans-serif;
    font-size: var(--font-size-base);
    color: var(--color-text);
    background-color: var(--color-bg);
  }
  body {
    margin: 0;
    padding-top: 3rem;
  }

  .section-header {
    text-align: center;
    padding: 0 1rem;
    margin-bottom: 1rem;
  }

  /* Design Helpers */

  * {
    border: 1px dotted var(--test-border);
  }

  /* Layout */

  .stack {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
  }
  .stack-small > * + * {
    margin-top: var(--space, 0.5rem);
  }
  .stack > * + * {
    margin-top: var(--space, 1.5rem);
  }
  .stack-large > * + * {
    margin-top: var(--space, 3rem);
  }
  .stack:only-child {
    height: 100%;
  }

  /*
  .stack > :nth-child(2) {
    margin-bottom: auto;
  } 
  */

  .box {
    /* ↓ Padding set to the first point on the modular scale */
    padding: var(--s1);
    /* ↓ Assumes you have a --border-thin var */
    border: var(--border-thin) solid;
    /* ↓ Always apply the transparent outline, for high contrast mode */
    outline: var(--border-thin) transparent;
    outline-offset: calc(var(--border-thin) * -1);
    /* ↓ The light and dark color vars */
    --color-light: #fff;
    --color-dark: #000;
    color: var(--color-dark);
    background-color: var(--color-light);
  }
  .box * {
    /* ↓ Force colors to inherit from the parent
    and honor inversion (below) */
    color: inherit;
  }
  .box.invert {
    /* ↓ The color vars inverted */
    color: var(--color-light);
    background-color: var(--color-dark);
  }

  .center {
    box-sizing: content-box;
    max-width: 60ch;
    margin-left: auto;
    margin-right: auto;
    display: flex;
    flex-direction: column;
    align-items: center;
  }